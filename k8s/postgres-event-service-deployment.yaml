apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgres-events-service
  name: postgres-events-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-events-service
  template:
    metadata:
      labels:
        app: postgres-events-service
    spec:
      initContainers:
      - name: remove-lost-found
        image: busybox
        command: ['sh', '-c', 'rm -rf /data/postgres/event/lost+found']
        volumeMounts:
        - mountPath: /data/postgres/event
          name: postgres-events-service-claim0
      containers:
        - env:
            - name: PGDATA
              value: /data/postgres/event
            - name: POSTGRES_DB
              value: eventdb
            - name: POSTGRES_PASSWORD
              value: password
            - name: POSTGRES_USER
              value: eventprod
          image: postgres
          name: postgres-events-service
          ports:
            - containerPort: 5432
          resources:
            limits:
              cpu: "250m"
              memory: "1Gi"
            requests:
              cpu: "100m"
              memory: "256Mi"
          volumeMounts:
            - mountPath: /data/postgres/event
              name: postgres-events-service-claim0
      restartPolicy: Always
      volumes:
        - name: postgres-events-service-claim0
          persistentVolumeClaim:
            claimName: postgres-events-service-claim0

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres-events-service
  name: postgres-events-service
spec:
  ports:
    - name: "5433"
      protocol: TCP
      port: 5433
      targetPort: 5432
  selector:
    app: postgres-events-service
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: postgres-events-service-claim0
  name: postgres-events-service-claim0
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}